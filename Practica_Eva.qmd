---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("El dataframe tiene", nrow(df_seeds), "filas y", ncol(df_seeds), "columnas.")
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, levels = c(1, 2, 3), labels = c("Kama", "Rosa", "Canadian"))

head(df_seeds)
```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_seeds |> group_by(tipo) |> summarise(area_media = mean(area))

paste ("La media del area del tipo Kama es", mean(df_seeds[df_seeds$tipo == "Kama", "area"]))
paste ("La media del area del tipo Rosa es", mean(df_seeds[df_seeds$tipo == "Rosa", "area"]))
paste ("La media del area del tipo Canadian es", mean(df_seeds[df_seeds$tipo == "Canadian", "area"]))
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'Este tipo de gráficos se llaman diagramas de caja o boxplot y representa la distribución del área (eje y) para cada tipo (eje x).

La línea del centro de las cajas representa la mediana y segundo cuartil (Q2) de cada tipo (Kama, Rosa y Canadian), es decir, divide cada uno de los 3 tipos en 2 partes iguales.'

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo)) + geom_point() + labs(x = "Compacto", y = "Área", title = "Scatterplot")+theme_bw()
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: 'Agrega al dataframe "df_seeds" una nueva columna (is_kama) que indica si la semilla de esa fila es tipo Kama o no, de tal forma que si el valor de la columna "tipo" es "Kama", devuelve "TRUE" y si no es "Kama" devuelve "FALSE".'

```{r}
#meto aquí esta modificación para que no me de problemas más adelante :)
df_seeds$is_kama <- as.factor(df_seeds$is_kama)
```

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: 'Lo que se hace es crear 2 grupos:

-   Train: con el 70% (en este caso, pero suele estar entorno al 70-80%) de los datos para entrenar el modelo y aprender patrones.

-   Test: resto de datos que se reservan para evaluar la calidad del modelo. Este grupo se utiliza para evaluar cómo de bien o mal va a predecir el modelo con datos nuevos (no vistos).

De esta manera, evitamos el sobreajuste del modelo, ya que sino puede tener ruido de los datos que tenemos, y así obtenemos una estimación más realista de la capacidad de nuestro modelo para generalizar a datos nuevos, por lo que el rendimiento será mejor.'

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: 'Un modelo de regresión logística'

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model <- glm(data = df_seeds_train, formula = is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, family = binomial('logit'))

summary(model)
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
str(df_seeds)

cf <- caret::confusionMatrix(data = factor(predict(model, df_seeds_test)>0, labels = c("FALSE", "TRUE")), reference = df_seeds_test$is_kama)

cf

paste("La precisión del modelo para un umbral de 0 es:", 23/(1+23))
paste("La exhaustividad del modelo para un umbral de 0 es:", 23/(0+23))
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: 'Hace un análisis cluster utilizando el algoritmo de k-means y compara el resultado con la columna "tipo", pasos:

-   set.seed(123): genera los números aleatorios de forma que para todos se generen los mismos

-   cl\<-df_seeds \|\> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) \|\> kmeans(3): crea "cl" utilizando el dataframe "df_seeds", selecciona las columnas que utiliza para hacer el clúster (area, perimetro, compacto, longitud, anchura, coeficient.asimetria, longitud.ranura) y aplica el análisis de k-means para 3 clústeres (kmeans(3))

-   table(real=df_seeds$tipo,cluster=cl$cluster): crea una tabla para comparar los casos de cada tipo que entran en cada clúster

En este caso, la mayoría de casos de cada tipo entran en un clúster distinto, por lo que, en general, el análisis clúster agrupa bien.'
